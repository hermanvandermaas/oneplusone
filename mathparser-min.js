function Tokanize(e){var t,n;var r;var i,s;var o,u;var a,f;t=0;n=0;i=0;a="";r=new Array;e=Trim(e);while(t<e.length){f="";o=e.substr(t,1);if(window)if(window.status)window.status="Processing "+o;switch(o){case" ":if(a.length>0){r[i]=a;i++;a=""}break;case"(":n++;if(a.length>0){r[i]=a;i++;a=""}r[i]=o;i++;break;case")":n--;if(a.length>0){r[i]=a;i++;a=""}r[i]=o;i++;break;case"^":if(a.length>0){r[i]=a;i++;a=""}r[i]=o;i++;break;case"√":if(a.length>0){r[i]=a;i++;a=""}r[i]=o;i++;break;case"*":if(a.length>0){r[i]=a;i++;a=""}r[i]=o;i++;break;case"/":if(a.length>0){r[i]=a;i++;a=""}r[i]=o;i++;break;case"%":if(a.length>0){r[i]=a;i++;a=""}r[i]=o;i++;break;case"&":if(a.length>0){r[i]=a;i++;a=""}r[i]=o;i++;break;case"|":if(a.length>0){r[i]=a;i++;a=""}r[i]=o;i++;break;case",":if(a.length>0){r[i]=a;i++;a=""}r[i]=o;i++;break;case"-":if(a.length>0){r[i]=a;i++;a=""}u=e.substr(t+1,1);if(r.length>0)f=r[i-1];if(t==0||(IsOperator(f)||f=="("||f==",")&&(IsDigit(u)||u=="(")){a+=o}else{r[i]=o;i++;a=""}break;case"+":if(a.length>0){r[i]=a;i++;a=""}u=e.substr(t+1,1);if(r.length>0)f=r[i-1];if(t==0||(IsOperator(f)||f=="("||f==",")&&(IsDigit(u)||u=="(")){a+=o}else{r[i]=o;i++;a=""}break;case"<":u=e.substr(t+1,1);if(a.length>0){r[i]=a;i++;a=""}if(u=="="){r[i]=o+"=";i++;t++}else if(u==">"){r[i]=o+">";i++;t++}else{r[i]=o;i++}break;case">":u=e.substr(t+1,1);if(a.length>0){r[i]=a;i++;a=""}if(u=="="){r[i]=o+"=";i++;t++}else{r[i]=o;i++}break;case"=":if(a.length>0){r[i]=a;i++;a=""}r[i]=o;i++;break;case"'":if(a.length>0){r[i]=a;i++;a=""}s=e.indexOf(o,t+1);if(s<0)throw"Unterminated string constant";else{a+=e.substring(t+1,s);r[i]=a;i++;a="";t=s}break;case'"':if(a.length>0){r[i]=a;i++;a=""}s=e.indexOf(o,t+1);if(s<0){throw"Unterminated string constant"}else{a+=e.substring(t+1,s);r[i]=a;i++;a="";t=s}break;default:a+=o;break}t++}if(n>0)throw"Unbalanced parenthesis!";if(a.length>0)r[i]=a;return r}function IsDigit(e){if(lstDigits.indexOf(e)>=0)return true;return false}function IsAlpha(e){if(lstAlpha.indexOf(e)>=0||lstAlpha.toUpperCase().indexOf(e)>=0)return true;return false}function IsOperator(e){if(lstArithOps.indexOf(e)>=0||lstCompaOps.indexOf(e)>=0)return true;return false}function IsFunction(e){var t=0;e=e.toUpperCase();for(t=0;t<lstFuncOps.length;t++){if(e==lstFuncOps[t])return true}return false}function Trim(e){if(e.length<1)return"";e=RTrim(e);e=LTrim(e);if(e=="")return"";else return e}function RTrim(e){var t=String.fromCharCode(32);var n=e.length;var r="";if(n<0){return""}var i=n-1;while(i>-1){if(e.charAt(i)==t){}else{r=e.substring(0,i+1);break}i=i-1}return r}function LTrim(e){var t=String.fromCharCode(32);if(n<1){return""}var n=e.length;var r="";var i=0;while(i<n){if(e.charAt(i)==t){}else{r=e.substring(i,n);break}i=i+1}return r}function Stack(){this.arrStack=new Array;this.intIndex=0;this.Size=getSize;this.IsEmpty=isStackEmpty;this.Push=pushElement;this.Pop=popElement;this.Get=getElement;this.toString=dumpStack}function dumpStack(){var e=0;var t="";if(this.intIndex==0)return null;for(e=0;e<this.intIndex;e++){if(t.length==0)t+=this.arrStack[e];else t+=","+this.arrStack[e]}return t}function getSize(){return this.intIndex}function isStackEmpty(){if(this.intIndex==0)return true;else return false}function pushElement(e){debugAssert("Pushing "+e);this.arrStack[this.intIndex]=e;this.intIndex++}function popElement(){var e;e=null;if(this.intIndex>0){this.intIndex--;e=this.arrStack[this.intIndex]}return e}function getElement(e){var t;if(e>=0&&e<this.intIndex)t=this.arrStack[this.intIndex-e-1];return t}function Expression(e){function o(e){s=e}function u(e){t=e}function a(e,t){if(n==null||n==undefined)n=new Array;n[e]=t}function f(){n=null;t=null;r=null;i=null}function l(){r=Tokanize(t);if(r==null||r==undefined)throw"Unable to tokanize the expression!";if(r.length<=0)throw"Unable to tokanize the expression!";i=p(r);if(i==null||i==undefined)throw"Unable to convert the expression to postfix form!";if(i.length<=0)throw"Unable to convert the expression to postfix form!";return i.toString()}function c(e){var t;debugAssert(e);if(n==null||n==undefined)throw"Variable values are not supplied!";t=n[e];if(t==undefined||t==null)throw"Variable ["+e+"] not defined";debugAssert(e+" - "+t);return t}function h(){var e;var r;var o,u;var a,f,h,p;var d,v,m;var g;var y=/\s+/g;var b=y.test(t);if(!b){if(i==null||i==undefined)l();if(i.length==0)throw"Unable to parse the expression!"}else{var w=t.match(/[0-9\.]+|[\^√\*/%\+-]/g);i=w}g=i;if(g==null||g==undefined){throw"Invalid postfix expression!";return}if(g.length==0){throw"Invalid postfix expression!";return}e=0;r=new Stack;while(e<g.length){o=g[e];switch(o){case ARG_TERMINAL:r.Push(o);break;case UNARY_NEG:if(r.IsEmpty())throw"No operand to negate!";a=null;f=null;a=r.Pop();if(IsVariable(a))a=c(a);d=ToNumber(a);if(isNaN(d))throw"Not a numaric value!";else{d=0-d;r.Push(d)}break;case"!":if(r.IsEmpty())throw"No operand on stack!";a=null;f=null;a=r.Pop();if(IsVariable(a))a=c(a);a=ToBoolean(a);if(a==null)throw"Not a boolean value!";else r.Push(!a);break;case"*":case"/":case"%":case"√":case"^":if(r.IsEmpty()||r.Size()<2)throw"Stack is empty, can not perform ["+o+"]";a=null;f=null;objTmp=null;f=r.Pop();a=r.Pop();if(IsVariable(a))a=c(a);if(IsVariable(f))f=c(f);v=ToNumber(a);m=ToNumber(f);if(isNaN(v)||isNaN(m))throw"Either one of the operand is not a number can not perform ["+o+"]";if(o=="^")r.Push(Math.pow(v,m));else if(o=="√")r.Push(Math.pow(m,1/v));else if(o=="*")r.Push(v*m);else if(o=="/")r.Push(v/m);else{debugAssert(v+" - "+m);r.Push(v%m)}break;case"+":case"-":if(r.IsEmpty()||r.Size()<2)throw"Stack is empty, can not perform ["+o+"]";a=null;f=null;h=null;p=null;u=o=="+"?"Addition":"Substraction";f=r.Pop();a=r.Pop();if(IsVariable(a))a=c(a);if(IsVariable(f))f=c(f);if(IsBoolean(a)||IsBoolean(f))throw"Can not perform "+u+" with boolean values!";else if(isDate(a,s)&&isDate(a,s))throw u+" of two dates not supported!";else if(typeof a=="object"||typeof a=="object")throw u+" of two objects not supported!";else if(typeof a=="undefined"||typeof a=="undefined")throw u+" of two undefined not supported!";else if(IsNumber(a)&&IsNumber(f)){v=ToNumber(a);m=ToNumber(f);if(o=="+")r.Push(v+m);else r.Push(v-m)}else{if(o=="+")r.Push(a+f);else throw strOP+" not supported for strings!"}break;case"=":case"<":case">":case"<>":case"<=":case">=":if(r.IsEmpty()||r.Size()<2)throw"Stack is empty, can not perform ["+o+"]";a=null;f=null;h=null;p=null;f=r.Pop();a=r.Pop();if(IsVariable(a))a=c(a);if(IsVariable(f))f=c(f);if(IsNumber(a)&&IsNumber(f)){v=ToNumber(a);m=ToNumber(f);if(o=="=")r.Push(v==m);else if(o=="<>")r.Push(v!=m);else if(o==">")r.Push(v>m);else if(o=="<")r.Push(v<m);else if(o=="<=")r.Push(v<=m);else if(o==">=")r.Push(v>=m)}else if(IsBoolean(a)&&IsBoolean(f)&&(o=="="||o=="<>")){h=ToBoolean(a);p=ToBoolean(f);if(o=="=")r.Push(h==p);else if(o=="<>")r.Push(h!=p)}else if(isDate(a,s)&&isDate(f,s)){if(typeof a=="string")h=getDateFromFormat(a,s);else h=a;if(typeof a=="string")p=getDateFromFormat(f,s);else p=f;if(o=="=")r.Push(h==p);else if(o=="<>")r.Push(h!=p);else if(o==">")r.Push(h>p);else if(o=="<")r.Push(h<p);else if(o=="<=")r.Push(h<=p);else if(o==">=")r.Push(h>=p)}else if(typeof a=="string"&&typeof f=="string"&&(o=="="||o=="<>")){if(o=="=")r.Push(a==f);else if(o=="<>")r.Push(a!=f)}else throw"For "+o+" operator LHS & RHS should be of same data type!";break;case"&":case"|":if(r.IsEmpty()||r.Size()<2)throw"Stack is empty, can not perform ["+o+"]";a=null;f=null;h=null;p=null;f=r.Pop();a=r.Pop();if(IsVariable(a))a=c(a);if(IsVariable(f))f=c(f);if(IsBoolean(a)&&IsBoolean(f)){h=ToBoolean(a);p=ToBoolean(f);if(o=="&")r.Push(h&&p);else if(o=="|")r.Push(h||p)}else throw"Logical operator requires LHS & RHS of boolean type!";break;default:if(IsNumber(o)||IsBoolean(o)||isDate(o,s)||typeof o=="number"||typeof o=="boolean"||typeof o=="object"||IsVariable(o)){r.Push(o);break}else HandleFunctions(o,r,s,n)}e++}if(r.IsEmpty()||r.Size()>1)throw"Unable to evaluate expression!";else return r.Pop()}function p(e){var t;var n,r;var i,o,u,a;var f;f=false;r=0;arrPFix=new Array;t=new Stack;for(n=0;n<e.length;n++){i=e[n];debugAssert("Processing token ["+i+"]");switch(i){case"(":if(t.Size()>0&&IsFunction(t.Get(0))){arrPFix[r]=ARG_TERMINAL;r++}t.Push(i);break;case")":f=true;debugAssert("Stack.Pop ["+t.toString());while(!t.IsEmpty()){i=t.Pop();if(i!="("){arrPFix[r]=i;r++}else{f=false;break}}if(t.IsEmpty()&&f)throw"Unbalanced parenthesis!";break;case",":if(t.IsEmpty())break;debugAssert("Pop stack till opening bracket found!");while(!t.IsEmpty()){i=t.Get(0);if(i=="(")break;arrPFix[r]=t.Pop();r++}break;case"!":case"-":if(i=="-"){a=null;if(n>0)a=e[n-1];u=e[n+1];if(a==null||IsOperator(a)||a=="("){debugAssert("Unary negation!");i=UNARY_NEG}};case"^":case"√":case"*":case"/":case"%":case"+":if(i=="+"){a=null;if(n>0)a=e[n-1];u=e[n+1];if(a==null||IsOperator(a)||a=="("){debugAssert("Unary add, Skipping");break}};case"&":case"|":case">":case"<":case"=":case">=":case"<=":case"<>":o="";if(!t.IsEmpty())o=t.Get(0);if(t.IsEmpty()||!t.IsEmpty()&&o=="("){debugAssert("Empty stack pushing operator ["+i+"]");t.Push(i)}else if(Precedence(i)>Precedence(o)){debugAssert("["+i+"] has higher precedence over ["+o+"]");t.Push(i)}else{while(!t.IsEmpty()){o=t.Get(0);if(o=="("||Precedence(o)<Precedence(i)){debugAssert("["+o+"] has lesser precedence over ["+i+"]");break}else{arrPFix[r]=t.Pop();r++}}t.Push(i)}break;default:if(!IsFunction(i)){debugAssert("Token ["+i+"] is a variable/number!");if(IsNumber(i))i=ToNumber(i);else if(IsBoolean(i))i=ToBoolean(i);else if(isDate(i,s))i=getDateFromFormat(i,s);arrPFix[r]=i;r++;break}else{o="";if(!t.IsEmpty())o=t.Get(0);if(t.IsEmpty()||!t.IsEmpty()&&o=="("){debugAssert("Empty stack pushing operator ["+i+"]");t.Push(i)}else if(Precedence(i)>Precedence(o)){debugAssert("["+i+"] has higher precedence over ["+o+"]");t.Push(i)}else{while(!t.IsEmpty()){o=t.Get(0);if(o=="("||Precedence(o)<Precedence(i)){debugAssert("["+o+"] has lesser precedence over ["+i+"]");break}else{arrPFix[r]=t.Pop();r++}}t.Push(i)}}break}debugAssert("Stack   : "+t.toString()+"\n"+"RPN Exp : "+arrPFix.toString())}while(!t.IsEmpty()){arrPFix[r]=t.Pop();r++}return arrPFix}var t=null;var n=null;var r=null;var i=null;var s="dd/MM/yyyy";this.DateFormat=o;this.Expression=u;this.Parse=l;this.Evaluate=h;this.AddVariable=a;this.Reset=f}function HandleFunctions(e,t,n,r){var i,s,o;var u,a;var f;var l;if(!IsFunction(e))throw"Unsupported function token ["+e+"]";i=e.toUpperCase();f=new Array;while(!t.IsEmpty()){s=ARG_TERMINAL;s=t.Pop();if(s!=ARG_TERMINAL)f[f.length]=s;else break}switch(i){case"DATE":s=new Date;t.Push(formatDate(s,n));break;case"ACOS":case"ASIN":case"ATAN":throw"Function ["+i+"] is not implemented!";break;case"ABS":case"CHR":case"COS":case"FIX":case"HEX":case"LOG":case"ROUND":case"SIN":case"SQRT":case"TAN":if(f.length<1)throw i+" requires atleast one argument!";else if(f.length>1)throw i+" requires only one argument!";s=f[0];if(IsVariable(s)){o=r[s];if(o==undefined||o==null)throw"Variable ["+s+"] not defined";else s=o}if(!IsNumber(s))throw i+" operates on numeric operands only!";else{o=ToNumber(s);if(i=="ABS")t.Push(Math.abs(o));else if(i=="CHR")t.Push(String.fromCharCode(o));else if(i=="COS")t.Push(Math.cos(o));else if(i=="FIX")t.Push(Math.floor(o));else if(i=="HEX")t.Push(o.toString(16));else if(i=="LOG")t.Push(Math.log(o));else if(i=="ROUND")t.Push(Math.round(o));else if(i=="SIN")t.Push(Math.sin(o));else if(i=="SQRT")t.Push(Math.sqrt(o));else if(i=="TAN")t.Push(Math.tan(o))}break;case"ASC":if(f.length>1)throw i+" requires only one argument!";else if(f.length<1)throw i+" requires atleast one argument!";s=f[0];if(IsVariable(s)){o=r[s];if(o==undefined||o==null)throw"Variable ["+s+"] not defined";else s=o}if(IsNumber(s)||IsBoolean(s)||isDate(s,n)||typeof s!="string")throw i+" requires a string type operand!";else t.Push(s.charCodeAt(0));break;case"LCASE":case"UCASE":case"CDATE":if(f.length<1)throw i+" requires atleast one argument!";else if(f.length>1)throw i+" requires only one argument!";s=f[0];if(IsVariable(s)){o=r[s];if(o==undefined||o==null)throw"Variable ["+s+"] not defined";else s=o}if(i=="CDATE"&&!isDate(s,n))throw"CDate can not convert ["+s+"] to a valid date!";else if(typeof s=="number"||typeof s!="string")throw i+" requires a string type operand!";else{if(i=="LCASE")t.Push(s.toLowerCase());else if(i=="UCASE")t.Push(s.toUpperCase());else if(i=="CDATE"){o=getDateFromFormat(s,n);t.Push(new Date(o))}}break;case"LEFT":case"RIGHT":if(f.length<2)throw i+" requires atleast two arguments!";else if(f.length>2)throw i+" requires only two arguments!";for(l=0;l<f.length;l++){s=f[l];if(IsVariable(s)){o=r[s];if(o==undefined||o==null)throw"Variable ["+s+"] not defined";else s=o}if(l==0&&!IsNumber(s))throw i+" oprator requires numaric length!";f[l]=s}s=new String(f[1]);o=ToNumber(f[0]);if(i=="LEFT")t.Push(i.substring(0,o));else t.Push(i.substr(s.length-o,o));break;case"MID":case"IIF":if(f.length<3)throw i+" requires atleast three arguments!";else if(f.length>3)throw i+" requires only three arguments!";for(l=0;l<f.length;l++){s=f[l];if(IsVariable(s)){o=r[s];if(o==undefined||o==null)throw"Variable ["+s+"] not defined";else s=o}if(s=="MID"&&l<=1&&!IsNumber(s))throw i+" oprator requires numaric lengths!";else if(s=="IIF"&&l==2&&!IsBoolean(s))throw i+" oprator requires boolean condition!";f[l]=s}if(i=="MID"){s=new String(f[2]);u=ToNumber(f[1]);a=ToNumber(f[0]);t.Push(s.substring(u,a))}else{s=ToBoolean(f[2]);u=f[1];a=f[0];if(s)t.Push(u);else t.Push(a)}break;case"AVG":case"MAX":case"MIN":if(f.length<2)throw i+" requires atleast two operands!";o=0;for(l=0;l<f.length;l++){s=f[l];if(IsVariable(s)){o=r[s];if(o==undefined||o==null)throw"Variable ["+s+"] not defined";else s=o}if(!IsNumber(s))throw i+" requires numaric operands only!";s=ToNumber(s);if(i=="AVG")o+=s;else if(i=="MAX"&&o<s)o=s;else if(i=="MIN"){if(l==1)o=s;else if(o>s)o=s}}if(i=="AVG")t.Push(o/f.length);else t.Push(o);break}}function IsNumber(e){var t=Number.NaN;t=new Number(e);if(isNaN(t))return false;return true}function IsBoolean(e){var t=typeof e;var n=null;if(t=="boolean")return true;if(t=="number"||t=="function"||t==undefined)return false;if(IsNumber(e))return false;if(t=="object"){n=e.toString();if(n.toUpperCase()=="TRUE"||n.toUpperCase()=="FALSE")return true}if(e.toUpperCase()=="TRUE"||e.toUpperCase()=="FALSE")return true;return false}function IsVariable(e){if(lstArithOps.indexOf(e)>=0||lstLogicOps.indexOf(e)>=0||lstCompaOps.indexOf(e)>=0||typeof e=="string"&&(e.toUpperCase()=="TRUE"||e.toUpperCase()=="FALSE"||parseDate(e)!=null)||typeof e=="number"||typeof e=="boolean"||typeof e=="object"||IsNumber(e)||IsFunction(e))return false;return true}function ToNumber(e){var t=Number.NaN;if(typeof e=="number")return e;else{t=new Number(e);return t.valueOf()}}function ToBoolean(e){var t=Number.NaN;var n=null;if(e==null||e==undefined)throw"Boolean value is not defined!";else if(typeof e=="boolean")return e;else if(typeof e=="number")return pobjval>0;else if(IsNumber(e)){t=ToNumber(e);if(isNaN(t))return null;else return t>0}else if(typeof e=="object"){n=e.toString();if(n.toUpperCase()=="TRUE")return true;else if(n.toUpperCase()=="FALSE")return false;else return null}else if(typeof e=="string"){if(e.toUpperCase()=="TRUE")return true;else if(e.toUpperCase()=="FALSE")return false;else return null}else return null}function Precedence(e){var t=0;switch(e){case"+":case"-":t=5;break;case"*":case"/":case"%":t=6;break;case"^":t=7;break;case"√":t=8;break;case UNARY_NEG:case"!":t=10;break;case"(":t=99;break;case"&":case"|":t=3;break;case">":case">=":case"<":case"<=":case"=":case"<>":t=4;break;default:if(IsFunction(e))t=9;else t=0;break}debugAssert("Precedence of "+e+" is "+t);return t}function debugAssert(e){if(DEBUG_ON)alert(e.toString())}function LZ(e){return(e<0||e>9?"":"0")+e}function isDate(e,t){var n=getDateFromFormat(e,t);if(n==0){return false}return true}function compareDates(e,t,n,r){var i=getDateFromFormat(e,t);var s=getDateFromFormat(n,r);if(i==0||s==0){return-1}else if(i>s){return 1}return 0}function formatDate(e,t){t=t+"";var n="";var r=0;var i="";var s="";var o=e.getYear()+"";var u=e.getMonth()+1;var a=e.getDate();var f=e.getDay();var l=e.getHours();var c=e.getMinutes();var h=e.getSeconds();var p,d,v,m,g,y,b,w,E,S,x,l,T,N,C,k;var L=new Object;if(o.length<4){o=""+(o-0+1900)}L["y"]=""+o;L["yyyy"]=o;L["yy"]=o.substring(2,4);L["M"]=u;L["MM"]=LZ(u);L["MMM"]=MONTH_NAMES[u-1];L["NNN"]=MONTH_NAMES[u+11];L["d"]=a;L["dd"]=LZ(a);L["E"]=DAY_NAMES[f+7];L["EE"]=DAY_NAMES[f];L["H"]=l;L["HH"]=LZ(l);if(l==0){L["h"]=12}else if(l>12){L["h"]=l-12}else{L["h"]=l}L["hh"]=LZ(L["h"]);if(l>11){L["K"]=l-12}else{L["K"]=l}L["k"]=l+1;L["KK"]=LZ(L["K"]);L["kk"]=LZ(L["k"]);if(l>11){L["a"]="PM"}else{L["a"]="AM"}L["m"]=c;L["mm"]=LZ(c);L["s"]=h;L["ss"]=LZ(h);while(r<t.length){i=t.charAt(r);s="";while(t.charAt(r)==i&&r<t.length){s+=t.charAt(r++)}if(L[s]!=null){n=n+L[s]}else{n=n+s}}return n}function _isInteger(e){var t="1234567890";for(var n=0;n<e.length;n++){if(t.indexOf(e.charAt(n))==-1){return false}}return true}function _getInt(e,t,n,r){for(var i=r;i>=n;i--){var s=e.substring(t,t+i);if(s.length<n){return null}if(_isInteger(s)){return s}}return null}function getDateFromFormat(e,t){e=e+"";t=t+"";var n=0;var r=0;var i="";var s="";var o="";var u,a;var f=new Date;var l=f.getYear();var c=f.getMonth()+1;var h=1;var p=f.getHours();var d=f.getMinutes();var v=f.getSeconds();var m="";while(r<t.length){i=t.charAt(r);s="";while(t.charAt(r)==i&&r<t.length){s+=t.charAt(r++)}if(s=="yyyy"||s=="yy"||s=="y"){if(s=="yyyy"){u=4;a=4}if(s=="yy"){u=2;a=2}if(s=="y"){u=2;a=4}l=_getInt(e,n,u,a);if(l==null){return 0}n+=l.length;if(l.length==2){if(l>70){l=1900+(l-0)}else{l=2e3+(l-0)}}}else if(s=="MMM"||s=="NNN"){c=0;for(var g=0;g<MONTH_NAMES.length;g++){var y=MONTH_NAMES[g];if(e.substring(n,n+y.length).toLowerCase()==y.toLowerCase()){if(s=="MMM"||s=="NNN"&&g>11){c=g+1;if(c>12){c-=12}n+=y.length;break}}}if(c<1||c>12){return 0}}else if(s=="EE"||s=="E"){for(var g=0;g<DAY_NAMES.length;g++){var b=DAY_NAMES[g];if(e.substring(n,n+b.length).toLowerCase()==b.toLowerCase()){n+=b.length;break}}}else if(s=="MM"||s=="M"){c=_getInt(e,n,s.length,2);if(c==null||c<1||c>12){return 0}n+=c.length}else if(s=="dd"||s=="d"){h=_getInt(e,n,s.length,2);if(h==null||h<1||h>31){return 0}n+=h.length}else if(s=="hh"||s=="h"){p=_getInt(e,n,s.length,2);if(p==null||p<1||p>12){return 0}n+=p.length}else if(s=="HH"||s=="H"){p=_getInt(e,n,s.length,2);if(p==null||p<0||p>23){return 0}n+=p.length}else if(s=="KK"||s=="K"){p=_getInt(e,n,s.length,2);if(p==null||p<0||p>11){return 0}n+=p.length}else if(s=="kk"||s=="k"){p=_getInt(e,n,s.length,2);if(p==null||p<1||p>24){return 0}n+=p.length;p--}else if(s=="mm"||s=="m"){d=_getInt(e,n,s.length,2);if(d==null||d<0||d>59){return 0}n+=d.length}else if(s=="ss"||s=="s"){v=_getInt(e,n,s.length,2);if(v==null||v<0||v>59){return 0}n+=v.length}else if(s=="a"){if(e.substring(n,n+2).toLowerCase()=="am"){m="AM"}else if(e.substring(n,n+2).toLowerCase()=="pm"){m="PM"}else{return 0}n+=2}else{if(e.substring(n,n+s.length)!=s){return 0}else{n+=s.length}}}if(n!=e.length){return 0}if(c==2){if(l%4==0&&l%100!=0||l%400==0){if(h>29){return 0}}else{if(h>28){return 0}}}if(c==4||c==6||c==9||c==11){if(h>30){return 0}}if(p<12&&m=="PM"){p=p-0+12}else if(p>11&&m=="AM"){p-=12}var w=new Date(l,c-1,h,p,d,v);return w.getTime()}function parseDate(e){var t=arguments.length==2?arguments[1]:false;generalFormats=new Array("y-M-d","MMM d, y","MMM d,y","y-MMM-d","d-MMM-y","MMM d");monthFirst=new Array("M/d/y","M-d-y","M.d.y","MMM-d","M/d","M-d");dateFirst=new Array("d/M/y","d-M-y","d.M.y","d-MMM","d/M","d-M");var n=new Array("generalFormats",t?"dateFirst":"monthFirst",t?"monthFirst":"dateFirst");var r=null;for(var i=0;i<n.length;i++){var s=window[n[i]];for(var o=0;o<s.length;o++){r=getDateFromFormat(e,s[o]);if(r!=0){return new Date(r)}}}return null}var lstAlpha="a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,uv,w,x,y,z";var lstDigits="0,1,2,3,4,5,6,7,8,9";var lstArithOps="^,√,*,/,%,+,-";var lstLogicOps="!,&,|";var lstCompaOps="<,<=,>,>=,<>,=";var lstFuncOps=["AVG","ABS","ACOS","ASC","ASIN","ATAN","CDATE","CHR","COS","DATE","FIX","HEX","IIF","LCASE","LEFT","LOG","MAX","MID","MIN","RIGHT","ROUND","SIN","SQRT","TAN","UCASE"];var UNARY_NEG="";var ARG_TERMINAL="Ø";var LESS_THAN="«";var GREATER_THAN="»";var NOT_EQUAL="×";var DEBUG_ON=false;var NUMARIC_OP="*,/,%,^,√";var MONTH_NAMES=new Array("January","February","March","April","May","June","July","August","September","October","November","December","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec");var DAY_NAMES=new Array("Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sun","Mon","Tue","Wed","Thu","Fri","Sat")